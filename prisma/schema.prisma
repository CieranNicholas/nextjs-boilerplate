generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User
model User {
  id    String  @id @default(cuid()) 
  email String  @unique
  name  String?

  password   String?
  avatar     String?
  theme      String?
  isVerified Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  stripeCustomerId String? @unique 

  session       Session[]
  subscriptions Price[]   @relation("UserSubscriptions")
}

// Authentication & Verification
model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  expiresAt DateTime @default(dbgenerated("NOW() + INTERVAL '1 day'"))
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  expiresAt DateTime @default(dbgenerated("NOW() + INTERVAL '1 day'"))
}

// Price
model Price {
  id              String               @id @default(cuid())
  stripePriceId   String?              @unique
  stripeProductId String?              @map("product_id")
  active          Boolean?
  unitAmount      BigInt?              @map("unit_amount")
  currency        String?
  type            PricingType?
  interval        PricingPlanInterval?
  intervalCount   Int?                 @map("interval_count")
  trialPeriodDays Int?                 @map("trial_period_days")
  metadata        Json?

  productId String?
  product   Product? @relation(fields: [productId], references: [id])
  users     User[]   @relation("UserSubscriptions")
}

enum PricingType {
  RECURRING
  ONE_TIME
}

enum PricingPlanInterval {
  DAY
  WEEK
  MONTH
  YEAR
}

// Product
model Product {
  id              String   @id @default(cuid())
  name            String?
  description     String?
  image           String?
  active          Boolean?
  metadata        Json?
  stripeProductId String?  @unique

  prices Price[]
}